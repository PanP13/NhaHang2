package GUI;

import BUS.LoaiTK_BUS;
import BUS.NhanVien_BUS;
import BUS.TaiKhoan_BUS;
import DTO.LoaiTK;
import DTO.NhanVien;
import DTO.TaiKhoan;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TaiKhoan_GUI extends javax.swing.JPanel {

    DefaultTableModel dt;
    TaiKhoan_BUS busTK;
    LoaiTK_BUS busLTK;
    NhanVien_BUS busNV;
    TaiKhoan tk;

    public TaiKhoan_GUI() {
        initComponents();
        setPanel();
    }

    public TaiKhoan_GUI(TaiKhoan user) {
        initComponents();

        tk = user;
        setPanel();
    }

    private void setPanel() {
        busTK = new TaiKhoan_BUS();
        busLTK = new LoaiTK_BUS();
        busNV = new NhanVien_BUS();

        dt = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        Table.setModel(dt);
        String d[] = {"Tên đăng nhập", "Mật khẩu", "Loại", "Mã tài khoản"};
        for (String i : d) {
            dt.addColumn(i);
        }

        setComboBox();
        setTableData(busTK.getAllTK());
    }

    private void setComboBox() {
        //Cấu hình comboBox tìm kiếm
        cbxSearch.removeAllItems();
        cbxSearch.addItem("Loại");
        cbxSearch.addItem("Mã tài khoản");

        //Cấu hình comboBox loại tài khoản
        cbxType.removeAllItems();
        cbxType.addItem("Quản lý");
        cbxType.addItem("Nhân viên");

        //Cấu hình comboxBox mã tài khoản
        cbxAccount.removeAllItems();
        for (NhanVien i : busNV.getAllNV()) {
            cbxAccount.addItem(i.getMaNV());
        }
    }

    //Hàm lấy dữ liệu cho table
    private void setTableData(List<TaiKhoan> tks) {
        dt.setRowCount(0);
        for (TaiKhoan i : tks) {
            String loaiTK = i.getLoaiTK() == 0 ? "Quản lý" : "Nhân viên";
            dt.addRow(new Object[]{i.getUsername(), i.getPassword(), loaiTK, i.getMaTK()});
        }
    }

    private void setTableData2(List<TaiKhoan> tks) {
        Reset();
        setTableData(tks);
    }

    //Hàm reset
    private void Reset() {
        txtUsername.setText("");
        txtPassword.setText("");
        txtConfirm.setText("");
        cbxType.setSelectedIndex(0);
        cbxAccount.setSelectedIndex(0);
        cbxAccount.setEnabled(true);
    }

    //Hàm lấy String password
    private String getStringPassword(char[] password) {
        String pass = "";
        for (char i : password) {
            pass += i;
        }
        return pass;
    }

    //Hàm check lỗi dữ liệu
    private void check() throws Exception {
        if (txtUsername.getText().trim().isEmpty()) {
            throw new Exception("Tên đăng nhập trống");
        } else if (getStringPassword(txtPassword.getPassword()).isEmpty()) {
            throw new Exception("Mật khẩu trống");
        } else if (getStringPassword(txtConfirm.getPassword()).isEmpty()) {
            throw new Exception("Mật khẩu xác nhận trống");
        } else {
            String username = txtUsername.getText().trim();
            for (TaiKhoan i : busTK.getAllTK()) {
                if (i.getUsername().equals(username)) {
                    throw new Exception("Tên đăng nhập bị trùng");
                }
            }

            String password = getStringPassword(txtPassword.getPassword()), confirm = getStringPassword(txtConfirm.getPassword());
            if (!password.equals(confirm)) {
                throw new Exception("Mật khẩu không đúng");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDetails = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlDetail = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblConfirm = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblAccount = new javax.swing.JLabel();
        pnlTxt = new javax.swing.JPanel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirm = new javax.swing.JPasswordField();
        cbxType = new javax.swing.JComboBox<>();
        cbxAccount = new javax.swing.JComboBox<>();
        pnlBtn = new javax.swing.JPanel();
        btnADD = new javax.swing.JButton();
        btnUPDATE = new javax.swing.JButton();
        btnDELETE = new javax.swing.JButton();
        btnREFRESH = new javax.swing.JButton();
        pnlTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        pnlSearch = new javax.swing.JPanel();
        cbxSearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSEARCH = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        pnlDetails.setBackground(new java.awt.Color(255, 255, 255));
        pnlDetails.setLayout(new java.awt.BorderLayout());

        lblTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(159, 32, 66));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setLabelFor(pnlDetails);
        lblTitle.setText("TÀI KHOẢN");
        pnlDetails.add(lblTitle, java.awt.BorderLayout.PAGE_START);

        pnlDetail.setBackground(new java.awt.Color(255, 255, 255));
        pnlDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(159, 32, 66))); // NOI18N

        pnlTitle.setBackground(new java.awt.Color(255, 255, 255));
        pnlTitle.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        lblUsername.setBackground(new java.awt.Color(255, 255, 255));
        lblUsername.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(159, 32, 66));
        lblUsername.setText("Tên ĐN");
        pnlTitle.add(lblUsername);

        lblPassword.setBackground(new java.awt.Color(255, 255, 255));
        lblPassword.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(159, 32, 66));
        lblPassword.setText("Mật khẩu");
        pnlTitle.add(lblPassword);

        lblConfirm.setBackground(new java.awt.Color(255, 255, 255));
        lblConfirm.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblConfirm.setForeground(new java.awt.Color(159, 32, 66));
        lblConfirm.setText("Xác nhận");
        pnlTitle.add(lblConfirm);

        lblType.setBackground(new java.awt.Color(255, 255, 255));
        lblType.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblType.setForeground(new java.awt.Color(159, 32, 66));
        lblType.setText("Loại TK");
        pnlTitle.add(lblType);

        lblAccount.setBackground(new java.awt.Color(255, 255, 255));
        lblAccount.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblAccount.setForeground(new java.awt.Color(159, 32, 66));
        lblAccount.setText("Mã TK");
        pnlTitle.add(lblAccount);

        pnlTxt.setBackground(new java.awt.Color(255, 255, 255));
        pnlTxt.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pnlTxt.add(txtUsername);

        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pnlTxt.add(txtPassword);

        txtConfirm.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pnlTxt.add(txtConfirm);

        cbxType.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pnlTxt.add(cbxType);

        cbxAccount.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbxAccount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pnlTxt.add(cbxAccount);

        javax.swing.GroupLayout pnlDetailLayout = new javax.swing.GroupLayout(pnlDetail);
        pnlDetail.setLayout(pnlDetailLayout);
        pnlDetailLayout.setHorizontalGroup(
            pnlDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDetailLayout.setVerticalGroup(
            pnlDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetailLayout.createSequentialGroup()
                .addGroup(pnlDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlDetails.add(pnlDetail, java.awt.BorderLayout.CENTER);

        pnlBtn.setBackground(new java.awt.Color(255, 255, 255));
        pnlBtn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(159, 32, 66))); // NOI18N
        pnlBtn.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnADD.setBackground(new java.awt.Color(159, 32, 66));
        btnADD.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnADD.setForeground(new java.awt.Color(255, 255, 255));
        btnADD.setText("Thêm");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });
        pnlBtn.add(btnADD);

        btnUPDATE.setBackground(new java.awt.Color(159, 32, 66));
        btnUPDATE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUPDATE.setForeground(new java.awt.Color(255, 255, 255));
        btnUPDATE.setText("Sửa");
        btnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPDATEActionPerformed(evt);
            }
        });
        pnlBtn.add(btnUPDATE);

        btnDELETE.setBackground(new java.awt.Color(159, 32, 66));
        btnDELETE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDELETE.setForeground(new java.awt.Color(255, 255, 255));
        btnDELETE.setText("Xóa");
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });
        pnlBtn.add(btnDELETE);

        btnREFRESH.setBackground(new java.awt.Color(159, 32, 66));
        btnREFRESH.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnREFRESH.setForeground(new java.awt.Color(255, 255, 255));
        btnREFRESH.setText("Refresh");
        btnREFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnREFRESHActionPerformed(evt);
            }
        });
        pnlBtn.add(btnREFRESH);

        pnlDetails.add(pnlBtn, java.awt.BorderLayout.PAGE_END);

        pnlTable.setBackground(new java.awt.Color(255, 255, 255));

        Table.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setRowHeight(30);
        Table.getTableHeader().setReorderingAllowed(false);
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        pnlSearch.setBackground(new java.awt.Color(255, 255, 255));
        pnlSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(159, 32, 66))); // NOI18N
        pnlSearch.setLayout(new java.awt.BorderLayout());

        cbxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pnlSearch.add(cbxSearch, java.awt.BorderLayout.WEST);

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pnlSearch.add(txtSearch, java.awt.BorderLayout.CENTER);

        btnSEARCH.setBackground(new java.awt.Color(159, 32, 66));
        btnSEARCH.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSEARCH.setForeground(new java.awt.Color(255, 255, 255));
        btnSEARCH.setText("Tìm");
        pnlSearch.add(btnSEARCH, java.awt.BorderLayout.EAST);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
            .addComponent(pnlSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        int row = Table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tài khoản", "Thông báo", JOptionPane.ERROR_MESSAGE);
        } else {
            txtUsername.setText(String.valueOf(dt.getValueAt(row, 0)));
            txtPassword.setText(String.valueOf(dt.getValueAt(row, 1)));
            int type = String.valueOf(dt.getValueAt(row, 2)).equals("Quản lý") ? 0 : 1;
            cbxType.setSelectedIndex(type);
            cbxAccount.setSelectedItem(String.valueOf(dt.getValueAt(row, 3)));
            cbxAccount.setEnabled(false);
        }
    }//GEN-LAST:event_TableMouseClicked

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        try {
            check();

            String account = String.valueOf(cbxAccount.getSelectedItem());
            if (busTK.getTKbyUser(account) != null) {
                throw new Exception("Mã tài khoản đã tồn tại");
            }

            TaiKhoan i = new TaiKhoan();
            i.setUsername(txtUsername.getText());
            i.setPassword(getStringPassword(txtPassword.getPassword()));
            int type = String.valueOf(cbxType.getSelectedItem()).equals("Quản lý") ? 0 : 1;
            i.setLoaiTK(type);
            i.setMaTK(String.valueOf(cbxAccount.getSelectedItem()));

            busTK.addTK(i);
            JOptionPane.showMessageDialog(this, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            setTableData2(busTK.getAllTK());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPDATEActionPerformed
        try {
            check();

            TaiKhoan i = new TaiKhoan();
            i.setUsername(txtUsername.getText());
            i.setPassword(getStringPassword(txtPassword.getPassword()));
            int type = String.valueOf(cbxType.getSelectedItem()).equals("Quản lý") ? 0 : 1;
            i.setLoaiTK(type);
            i.setMaTK(String.valueOf(cbxAccount.getSelectedItem()));

            busTK.updateTK(i);
            JOptionPane.showMessageDialog(this, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            setTableData2(busTK.getAllTK());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUPDATEActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
        int row = Table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tài khoản", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa?");

            if (confirm == JOptionPane.YES_OPTION) {
                if (tk.getMaTK().equals(String.valueOf(dt.getValueAt(row, 3)))) {
                    JOptionPane.showMessageDialog(this, "Không thể xóa!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                } else {
                    busTK.deleteTK(String.valueOf(dt.getValueAt(row, 3)));
                    JOptionPane.showMessageDialog(this, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    setTableData2(busTK.getAllTK());
                }
            }
        }
    }//GEN-LAST:event_btnDELETEActionPerformed

    private void btnREFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnREFRESHActionPerformed
        setTableData2(busTK.getAllTK());
    }//GEN-LAST:event_btnREFRESHActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnREFRESH;
    private javax.swing.JButton btnSEARCH;
    private javax.swing.JButton btnUPDATE;
    private javax.swing.JComboBox<String> cbxAccount;
    private javax.swing.JComboBox<String> cbxSearch;
    private javax.swing.JComboBox<String> cbxType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccount;
    private javax.swing.JLabel lblConfirm;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlBtn;
    private javax.swing.JPanel pnlDetail;
    private javax.swing.JPanel pnlDetails;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JPanel pnlTxt;
    private javax.swing.JPasswordField txtConfirm;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
