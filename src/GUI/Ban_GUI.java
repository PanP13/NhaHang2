package GUI;

import BUS.Ban_BUS;
import BUS.LoaiBan_BUS;
import DTO.Ban;
import DTO.LoaiBan;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Ban_GUI extends javax.swing.JPanel {

    DefaultTableModel dt;
    Ban_BUS busB;
    LoaiBan_BUS busLB;

    public Ban_GUI() {
        initComponents();

        busB = new Ban_BUS();
        busLB = new LoaiBan_BUS();

        //Bảng
        setTable();
        setTableData(busB.getAllBan());

        //ComboBox
        setCBX();
    }

    //Hàm chỉnh bảng
    private void setTable() {
        dt = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        Table.setModel(dt);
        String header[] = {"Mã bàn", "Tên bàn", "Loại bàn"};
        for (String i : header) {
            dt.addColumn(i);
        }
    }

    //Hàm lấy dữ liệu bảng
    private void setTableData(List<Ban> bs) {
        dt.setRowCount(0);
        for (Ban i : bs) {
            dt.addRow(new Object[]{i.getMaBan(), i.getTenBan(), busLB.getBanbyID(i.getMaLB()).getSoGhe()});
        }
    }

    //Hàm chỉnh comboBox
    private void setCBX() {
        //comboBox Phân loại và loại bàn
        cbxSort.removeAllItems();
        cbxType.removeAllItems();
        cbxSort.addItem("Tất cả");

        for (LoaiBan i : busLB.getAllLB()) {
            cbxSort.addItem(String.valueOf(i.getSoGhe()));
            cbxType.addItem(String.valueOf(i.getSoGhe()));
        }

        //combox Tìm kiếm
        cbxSearch.removeAllItems();
        cbxSearch.addItem("Mã bàn");
        cbxSearch.addItem("Tên bàn");
    }

    //Hàm kiểm tra và ném lỗi
    private void check() throws Exception {
        if (txtID.getText().trim().isEmpty()) {
            throw new Exception("Mã bàn trống");
        } else if (txtName.getText().trim().isEmpty()) {
            throw new Exception("Tên bàn trống");
        } else if (!txtID.getText().trim().matches("^BN\\d{3}$")) {
            throw new Exception("Mã bàn không đúng định dạng");
        } else if (!txtName.getText().trim().matches("^[A-Z]{1}\\d{1,3}")) {
            throw new Exception("Tên bàn không đúng định dạng");
        }
    }

    //Hàm reset
    private void Reset() {
        txtID.setText("");
        txtName.setText("");
        cbxType.setSelectedIndex(0);
        txtID.setEditable(true);
        setTableData(busB.getAllBan());
    }

    //Hàm tạo bàn
    private Ban setBan(String id, String name, String type) {
        Ban b = new Ban();
        b.setMaBan(id);
        b.setTenBan(name);
        b.setMaLB(type);

        return b;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDetails = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlDetail = new javax.swing.JPanel();
        pnlD = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        pnlText = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        cbxType = new javax.swing.JComboBox<>();
        pnlPad = new javax.swing.JPanel();
        pnlFunction = new javax.swing.JPanel();
        pnlS = new javax.swing.JPanel();
        pnlSort = new javax.swing.JPanel();
        cbxSort = new javax.swing.JComboBox<>();
        pnlSearch = new javax.swing.JPanel();
        cbxSearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSEARCH = new javax.swing.JButton();
        pnlButton = new javax.swing.JPanel();
        btnADD = new javax.swing.JButton();
        btnUPDATE = new javax.swing.JButton();
        btnDELETE = new javax.swing.JButton();
        btnREFRESH = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        pnlDetails.setBackground(new java.awt.Color(255, 255, 255));
        pnlDetails.setLayout(new java.awt.BorderLayout());

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(159, 32, 66));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("BÀN");
        pnlDetails.add(lblTitle, java.awt.BorderLayout.PAGE_START);

        pnlDetail.setBackground(new java.awt.Color(255, 255, 255));
        pnlDetail.setLayout(new java.awt.BorderLayout());

        pnlD.setBackground(new java.awt.Color(255, 255, 255));
        pnlD.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(159, 32, 66))); // NOI18N

        pnlTitle.setBackground(new java.awt.Color(255, 255, 255));
        pnlTitle.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        lblID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblID.setForeground(new java.awt.Color(159, 32, 66));
        lblID.setText("Mã bàn");
        pnlTitle.add(lblID);

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(159, 32, 66));
        lblName.setText("Tên bàn");
        pnlTitle.add(lblName);

        lblType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblType.setForeground(new java.awt.Color(159, 32, 66));
        lblType.setText("Loại");
        pnlTitle.add(lblType);

        pnlText.setBackground(new java.awt.Color(255, 255, 255));
        pnlText.setLayout(new java.awt.GridLayout(0, 1, 0, 5));

        txtID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        pnlText.add(txtID);

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtName.setToolTipText("Định dạng: 1 ký tự từ A-Z + 1-3 ký tự số.");
        pnlText.add(txtName);

        cbxType.setBackground(new java.awt.Color(159, 32, 66));
        cbxType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbxType.setForeground(new java.awt.Color(255, 255, 255));
        cbxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pnlText.add(cbxType);

        javax.swing.GroupLayout pnlDLayout = new javax.swing.GroupLayout(pnlD);
        pnlD.setLayout(pnlDLayout);
        pnlDLayout.setHorizontalGroup(
            pnlDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlText, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDLayout.setVerticalGroup(
            pnlDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlText, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlDetail.add(pnlD, java.awt.BorderLayout.PAGE_START);

        pnlPad.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlPadLayout = new javax.swing.GroupLayout(pnlPad);
        pnlPad.setLayout(pnlPadLayout);
        pnlPadLayout.setHorizontalGroup(
            pnlPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 305, Short.MAX_VALUE)
        );
        pnlPadLayout.setVerticalGroup(
            pnlPadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );

        pnlDetail.add(pnlPad, java.awt.BorderLayout.CENTER);

        pnlDetails.add(pnlDetail, java.awt.BorderLayout.CENTER);

        pnlFunction.setBackground(new java.awt.Color(255, 255, 255));
        pnlFunction.setLayout(new java.awt.BorderLayout(0, 2));

        pnlS.setBackground(new java.awt.Color(255, 255, 255));
        pnlS.setLayout(new java.awt.GridLayout(0, 1, 0, 2));

        pnlSort.setBackground(new java.awt.Color(255, 255, 255));
        pnlSort.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phân loại", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(159, 32, 66))); // NOI18N
        pnlSort.setLayout(new java.awt.GridLayout());

        cbxSort.setBackground(new java.awt.Color(159, 32, 66));
        cbxSort.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        cbxSort.setForeground(new java.awt.Color(255, 255, 255));
        cbxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSortActionPerformed(evt);
            }
        });
        pnlSort.add(cbxSort);

        pnlS.add(pnlSort);

        pnlSearch.setBackground(new java.awt.Color(255, 255, 255));
        pnlSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(159, 32, 66))); // NOI18N
        pnlSearch.setLayout(new java.awt.BorderLayout(2, 0));

        cbxSearch.setBackground(new java.awt.Color(159, 32, 66));
        cbxSearch.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        cbxSearch.setForeground(new java.awt.Color(255, 255, 255));
        cbxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pnlSearch.add(cbxSearch, java.awt.BorderLayout.WEST);

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        pnlSearch.add(txtSearch, java.awt.BorderLayout.CENTER);

        btnSEARCH.setBackground(new java.awt.Color(159, 32, 66));
        btnSEARCH.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnSEARCH.setForeground(new java.awt.Color(255, 255, 255));
        btnSEARCH.setText("Tìm");
        btnSEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSEARCHActionPerformed(evt);
            }
        });
        pnlSearch.add(btnSEARCH, java.awt.BorderLayout.EAST);

        pnlS.add(pnlSearch);

        pnlFunction.add(pnlS, java.awt.BorderLayout.PAGE_START);

        pnlButton.setBackground(new java.awt.Color(255, 255, 255));
        pnlButton.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(159, 32, 66))); // NOI18N
        pnlButton.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        btnADD.setBackground(new java.awt.Color(159, 32, 66));
        btnADD.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnADD.setForeground(new java.awt.Color(255, 255, 255));
        btnADD.setText("Thêm");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });
        pnlButton.add(btnADD);

        btnUPDATE.setBackground(new java.awt.Color(159, 32, 66));
        btnUPDATE.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnUPDATE.setForeground(new java.awt.Color(255, 255, 255));
        btnUPDATE.setText("Sửa");
        btnUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPDATEActionPerformed(evt);
            }
        });
        pnlButton.add(btnUPDATE);

        btnDELETE.setBackground(new java.awt.Color(159, 32, 66));
        btnDELETE.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnDELETE.setForeground(new java.awt.Color(255, 255, 255));
        btnDELETE.setText("Xóa");
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });
        pnlButton.add(btnDELETE);

        btnREFRESH.setBackground(new java.awt.Color(159, 32, 66));
        btnREFRESH.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnREFRESH.setForeground(new java.awt.Color(255, 255, 255));
        btnREFRESH.setText("Đặt lại");
        btnREFRESH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnREFRESHActionPerformed(evt);
            }
        });
        pnlButton.add(btnREFRESH);

        pnlFunction.add(pnlButton, java.awt.BorderLayout.CENTER);

        pnlDetails.add(pnlFunction, java.awt.BorderLayout.PAGE_END);

        Table.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.setRowHeight(30);
        Table.setSelectionBackground(new java.awt.Color(159, 32, 66));
        Table.setSelectionForeground(new java.awt.Color(255, 255, 255));
        Table.getTableHeader().setReorderingAllowed(false);
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(pnlDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPDATEActionPerformed
        try {
            int row = Table.getSelectedRow();
            if (row == -1) {
                throw new Exception("Vui lòng chọn bàn cẩn sửa");
            }
            check();

            String type = "";
            for (LoaiBan i : busLB.getAllLB()) {
                if (String.valueOf(cbxType.getSelectedItem()).equals(String.valueOf(i.getSoGhe()))) {
                    type = i.getMaLB();
                    break;
                }
            }
            Ban b = setBan(txtID.getText(), txtName.getText().trim(), type);
            busB.updateBan(b);
            JOptionPane.showMessageDialog(this, "Sửa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            Reset();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUPDATEActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        int row = Table.getSelectedRow();
        if (row != -1) {
            txtID.setText(String.valueOf(dt.getValueAt(row, 0)));
            txtName.setText(String.valueOf(dt.getValueAt(row, 1)));
            cbxType.setSelectedItem(String.valueOf(dt.getValueAt(row, 2)));
            txtID.setEditable(false);
        }
    }//GEN-LAST:event_TableMouseClicked

    private void cbxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSortActionPerformed
        int sort = cbxSort.getSelectedIndex();
        if (sort == 0) {
            setTableData(busB.getAllBan());
        } else {
            setTableData(busB.searchBan(String.valueOf(sort), 2));
        }
    }//GEN-LAST:event_cbxSortActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        try {
            txtID.setEditable(true);
            check();
            if (busB.getBanbyID(txtID.getText().trim()) != null) {
                throw new Exception("Mã bàn đã tồn tại");
            }
            String type = "";
            for (LoaiBan i : busLB.getAllLB()) {
                if (cbxType.getSelectedItem().equals(i.getSoGhe())) {
                    type = i.getMaLB();
                    break;
                }
            }
            Ban b = setBan(txtID.getText().trim(), txtName.getText().trim(), type);
            busB.addBan(b);
            JOptionPane.showMessageDialog(this, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            Reset();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnREFRESHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnREFRESHActionPerformed
        Reset();
    }//GEN-LAST:event_btnREFRESHActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
        try {
            int row = Table.getSelectedRow();
            if (row == -1) {
                throw new Exception("Vui lòng chọn bàn cẩn xóa");
            }
            check();
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa?");
            if(confirm == JOptionPane.YES_OPTION){
                String id = txtID.getText();
                if (busB.getHD(id))
                    throw new Exception("Không thể xóa");
                busB.deleteBan(id);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDELETEActionPerformed

    private void btnSEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSEARCHActionPerformed
        try {
            if (txtSearch.getText().trim().isEmpty()) {
                throw new Exception("Dữ liệu nhập trống");
            }
            int t = cbxSearch.getSelectedIndex();
            String s = txtSearch.getText().trim();
            if (busB.searchBan(s, t).isEmpty()) {
                throw new Exception("Không tìm thấy bàn");
            }
            setTableData(busB.searchBan(s, t));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSEARCHActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnREFRESH;
    private javax.swing.JButton btnSEARCH;
    private javax.swing.JButton btnUPDATE;
    private javax.swing.JComboBox<String> cbxSearch;
    private javax.swing.JComboBox<String> cbxSort;
    private javax.swing.JComboBox<String> cbxType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblType;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlD;
    private javax.swing.JPanel pnlDetail;
    private javax.swing.JPanel pnlDetails;
    private javax.swing.JPanel pnlFunction;
    private javax.swing.JPanel pnlPad;
    private javax.swing.JPanel pnlS;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JPanel pnlSort;
    private javax.swing.JPanel pnlText;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
